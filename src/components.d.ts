/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  MatchResults,
  RouterHistory,
} from '@stencil/router';


export namespace Components {

  interface AddArticle {}
  interface AddArticleAttributes extends StencilHTMLAttributes {}

  interface AppHome {}
  interface AppHomeAttributes extends StencilHTMLAttributes {}

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface ArticleDelete {
    'history': RouterHistory;
    'match': MatchResults;
  }
  interface ArticleDeleteAttributes extends StencilHTMLAttributes {
    'history'?: RouterHistory;
    'match'?: MatchResults;
  }

  interface ArticleDetails {
    'match': MatchResults;
  }
  interface ArticleDetailsAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface ArticleEdit {
    'match': MatchResults;
  }
  interface ArticleEditAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface FetchArticle {}
  interface FetchArticleAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'AddArticle': Components.AddArticle;
    'AppHome': Components.AppHome;
    'AppRoot': Components.AppRoot;
    'ArticleDelete': Components.ArticleDelete;
    'ArticleDetails': Components.ArticleDetails;
    'ArticleEdit': Components.ArticleEdit;
    'FetchArticle': Components.FetchArticle;
  }

  interface StencilIntrinsicElements {
    'add-article': Components.AddArticleAttributes;
    'app-home': Components.AppHomeAttributes;
    'app-root': Components.AppRootAttributes;
    'article-delete': Components.ArticleDeleteAttributes;
    'article-details': Components.ArticleDetailsAttributes;
    'article-edit': Components.ArticleEditAttributes;
    'fetch-article': Components.FetchArticleAttributes;
  }


  interface HTMLAddArticleElement extends Components.AddArticle, HTMLStencilElement {}
  var HTMLAddArticleElement: {
    prototype: HTMLAddArticleElement;
    new (): HTMLAddArticleElement;
  };

  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLArticleDeleteElement extends Components.ArticleDelete, HTMLStencilElement {}
  var HTMLArticleDeleteElement: {
    prototype: HTMLArticleDeleteElement;
    new (): HTMLArticleDeleteElement;
  };

  interface HTMLArticleDetailsElement extends Components.ArticleDetails, HTMLStencilElement {}
  var HTMLArticleDetailsElement: {
    prototype: HTMLArticleDetailsElement;
    new (): HTMLArticleDetailsElement;
  };

  interface HTMLArticleEditElement extends Components.ArticleEdit, HTMLStencilElement {}
  var HTMLArticleEditElement: {
    prototype: HTMLArticleEditElement;
    new (): HTMLArticleEditElement;
  };

  interface HTMLFetchArticleElement extends Components.FetchArticle, HTMLStencilElement {}
  var HTMLFetchArticleElement: {
    prototype: HTMLFetchArticleElement;
    new (): HTMLFetchArticleElement;
  };

  interface HTMLElementTagNameMap {
    'add-article': HTMLAddArticleElement
    'app-home': HTMLAppHomeElement
    'app-root': HTMLAppRootElement
    'article-delete': HTMLArticleDeleteElement
    'article-details': HTMLArticleDetailsElement
    'article-edit': HTMLArticleEditElement
    'fetch-article': HTMLFetchArticleElement
  }

  interface ElementTagNameMap {
    'add-article': HTMLAddArticleElement;
    'app-home': HTMLAppHomeElement;
    'app-root': HTMLAppRootElement;
    'article-delete': HTMLArticleDeleteElement;
    'article-details': HTMLArticleDetailsElement;
    'article-edit': HTMLArticleEditElement;
    'fetch-article': HTMLFetchArticleElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
